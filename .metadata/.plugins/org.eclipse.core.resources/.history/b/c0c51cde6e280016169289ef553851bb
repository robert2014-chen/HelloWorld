create table T_USERS
(
  D_USERNAME VARCHAR(50) not null,
  D_PASSWORD VARCHAR(60),
  D_ENABLED  NUMERIC(1),
  D_ACCOUNTNONEXPIRED NUMERIC(1), 
  D_ACCOUNTNONLOCKED NUMERIC(1), 
  D_CREDENTIALSNONEXPIRED NUMERIC(1)
  );
alter table T_USERS
  add constraint PK_USERS_USERNAME primary key (D_USERNAME) ;
  
create table T_USER_ROLES
(
  D_USER_ROLE_ID NUMERIC(10) not null,
  D_USERNAME     VARCHAR(50),
  D_ROLE         VARCHAR(50)
);
alter table T_USER_ROLES
  add constraint PK_USER_ROLES primary key (D_USER_ROLE_ID);
alter table T_USER_ROLES
  add constraint IDX_UNI_ROLE_USERNAME unique (D_USERNAME, D_ROLE);

--辅助记录每个用户登录错误时的尝试次数  
create table T_USER_ATTEMPTS(
D_ID int(10) primary key auto_increment,
D_USERNAME varchar(20),
D_ATTEMPTS NUMERIC(4),
D_LASTMODIFIED timestamp
);

ALTER TABLE T_USER_ATTEMPTS ADD CONSTRAINT PK_USER_ATTEMPTS FOREIGN KEY (D_USERNAME) REFERENCES T_USERS(D_USERNAME);

insert into T_USERS (D_USERNAME, D_PASSWORD, D_ENABLED,D_ACCOUNTNONEXPIRED,D_ACCOUNTNONLOCKED,D_CREDENTIALSNONEXPIRED)
values ('YJMYZZ', '123456', 1,1,1,1);

insert into T_USERS (D_USERNAME, D_PASSWORD, D_ENABLED,D_ACCOUNTNONEXPIRED,D_ACCOUNTNONLOCKED,D_CREDENTIALSNONEXPIRED)
values ('MIKE', 'MIKE123', 1,1,1,1);

insert into T_USER_ROLES (D_USER_ROLE_ID, D_USERNAME, D_ROLE)
values (1, 'MIKE', 'POWER');

insert into T_USER_ROLES (D_USER_ROLE_ID, D_USERNAME, D_ROLE)
values (2, 'YJMYZZ', 'ADMIN');

insert into T_USER_ROLES (D_USER_ROLE_ID, D_USERNAME, D_ROLE)
values (3, 'YJMYZZ', 'POWER');



DELIMITER $$ CREATE EVENT spring.clear_test ON SCHEDULE EVERY 15 SECOND DO BEGIN DELETE FROM spring.T_USER_ATTEMPTS  WHERE  D_LASTMODIFIED < DATE_ADD(NOW(),INTERVAL -15 SECOND); UPDATE spring.T_USERS u SET u.D_ACCOUNTNONLOCKED=1 WHERE u.D_ACCOUNTNONLOCKED=0;END $$ DELIMITER ;