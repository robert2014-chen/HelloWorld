package com.robert.blend.thinking.utils;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class JDBCHelper {

	private volatile static JDBCHelper jdbcHelper = null;

	private Connection conn = null;

	private JDBCHelper() {
	}

	public static JDBCHelper newInstance() {
		if (null == jdbcHelper)
			synchronized (JDBCHelper.class) {
				if (null == jdbcHelper)
					jdbcHelper = new JDBCHelper();
			}
		return jdbcHelper;
	}

	public Connection getConnection() {
		try {

			if (null == conn) {
				Class.forName("com.mysql.jdbc.Driver");
				conn = DriverManager.getConnection(
						"jdbc:mysql://10.203.138.231/test", "root", "root");
			}
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return conn;
	}
	
	public void closeConnection(){
		if(null!=conn){
			try {
				conn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
	}
	
	public <T> T getEntityById (String sql,Class clazz){
		T entity = null;
		
		try {
			PreparedStatement preSta = conn.prepareStatement(sql);
			ResultSet rs = preSta.executeQuery();
			while(rs.next()){
				entity = (T)clazz.newInstance();
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} catch (InstantiationException e) {
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			e.printStackTrace();
		}
		
		
		return entity;
	}
}
